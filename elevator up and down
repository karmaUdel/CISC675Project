import javafx.application.Application;  
import javafx.stage.Stage;

import java.beans.EventHandler;

import javafx.animation.AnimationTimer;  
import javafx.animation.KeyFrame;  
import javafx.animation.KeyValue;  
import javafx.animation.Timeline;  
import javafx.event.ActionEvent;  
//import javafx.event.EventHandler;  
import javafx.scene.Group;  
import javafx.scene.Scene;  
import javafx.scene.effect.Lighting;  
import javafx.scene.layout.StackPane;  
import javafx.scene.paint.Color;  
import javafx.scene.shape.Rectangle;  
//import javafx.scene.text.Text;  
import javafx.util.Duration;
import javafx.animation.Transition;
import javafx.animation.TranslateTransition;

public class TimelineEvents extends Application {  
    
    //main timeline  
    private Timeline timeline;  
    private AnimationTimer timer;  
   
    //variable for storing actual frame  
    private Integer i=0;  
   
    @Override public void start(Stage stage) {  
        Group p = new Group();  
        Scene scene = new Scene(p);  
        stage.setScene(scene);  
        stage.setWidth(500);  
        stage.setHeight(500);  
        p.setTranslateX(80); //改位置 
        p.setTranslateY(80);  
   
        //create a circle with effect  
        final Rectangle rectangle = new Rectangle(10, 5, 100, 80);//宽高可改
        rectangle.setFill(Color.SILVER); 
        //create a layout for rectangle  
        final StackPane stack = new StackPane();  
        stack.getChildren().addAll( rectangle);  
        stack.setLayoutX(30);  
        stack.setLayoutY(30);  
   
        p.getChildren().add(stack);  
        stage.show();  
   
        //create a timeline for moving the rectangle  
        timeline = new Timeline();  
        timeline.setCycleCount(Timeline.INDEFINITE);  //设置周期循环往复
        timeline.setAutoReverse(true);  //设置动画周期往返
   
       final KeyValue kv=new KeyValue(rectangle.yProperty(), 5000);  
        final KeyFrame kf=new KeyFrame(Duration.millis(5000), kv);
        TranslateTransition translateTransition=new TranslateTransition(Duration.millis(5000), rectangle);
        translateTransition.setFromY(80);
        translateTransition.setToY(350);
        //translateTransition.setCycleCount(2);
        //translateTransition.setAutoReverse(true);
        TranslateTransition translateTransition1=new TranslateTransition(Duration.millis(5000), rectangle);
        translateTransition1.setFromY(350);
        translateTransition1.setToY(80);
        System.out.println("going up");
        
        //create a keyFrame, the keyValue is reached at time 2s  
        //Duration duration = Duration.millis(2000);  
        //one can add a specific action when the keyframe is reached  
   
  //KeyFrame keyFrame = new KeyFrame(duration, /*onFinished ,*/ keyValueX, keyValueY);  
   
        translateTransition.play();
        translateTransition1.play();
        
    }  
          
          
    public static void main(String[] args) {  
        Application.launch(args);  
    }  
  }  
